# This is a basic workflow to help you get started with Actions

name: Mac

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:
  merge_group:

  # run the pipeline on the 0th minute of the 0th hour of day 1 and 15 every month
  schedule:
    - cron: '0 0 1,15 * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  mac_m1_install:
    # The type of runner that the job will run on
    runs-on: macos-14

    # Specify the python versions to test
    strategy:
      matrix:
        python-version: ["3.11"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v3
        env:
          CONDA_CHANNELS: conda-forge
          CONDA_SUBDIR: osx-64
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: Update setuptools
        shell: bash -el {0}
        run: |
          python -m pip install --upgrade pip setuptools wheel packaging platformdirs setuptools-scm
          python -m pip install --user pipx
          python -m pipx install poetry


      - name: Install python packages with poetry
        shell: bash -el {0}
        env:
          SETUPTOOLS_SCM_SUBPROCESS_TIMEOUT: 120
        run: |
          poetry install --with dev

      - name: install packages with conda
        shell: bash -el {0}
        run: |
          conda install -c conda-forge astromatic-source-extractor astromatic-scamp astromatic-swarp astromatic-psfex astrometry gsl
          swarp -v
          scamp -v
          sex -v
          solve-field --version

      # Make sure the doc tests are up to date
      - name: Run doc tests
        shell: bash -el {0}
        run: |
          poetry run make -C docs/ doctest
